[package]
name = "kaelix-tests"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
description = "Comprehensive testing framework for MemoryStreamer"
keywords.workspace = true
categories.workspace = true

[dependencies]
humantime-serde = "1.1"
# Internal dependencies - all workspace members for integration testing
kaelix-core = { path = "../kaelix-core" }
kaelix-broker = { path = "../kaelix-broker" }
kaelix-publisher = { path = "../kaelix-publisher" }
kaelix-consumer = { path = "../kaelix-consumer" }

# Core async runtime - SECURITY UPDATED
tokio = { workspace = true, features = ["test-util", "time", "macros", "process", "fs", "net"] }
tokio-util = { workspace = true }
tokio-test = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }

# Streaming utilities
tokio-stream = "0.1"
async-stream = "0.3"

# Distributed testing and process management - SECURITY UPDATED
# REMOVE VULNERABLE tokio-process 0.2.5 - replace with current tokio process features
# tokio-process = "0.2"  # REMOVED: Contains vulnerable legacy dependencies
tempfile = "3.12"
nix = "0.29"

# Property-based testing
proptest = { workspace = true }
quickcheck = { workspace = true }
arbitrary = { workspace = true }

# Structured testing
test-case = { workspace = true }
rstest = { workspace = true }

# Mocking and simulation
mockall = { workspace = true }
wiremock = { workspace = true }
fake = { workspace = true }

# Data generation and manipulation
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
bytes = { workspace = true }
uuid = { workspace = true, features = ["v4", "serde"] }
chrono = { workspace = true, features = ["serde"] }

# Random number generation
rand = { workspace = true }
rand_distr = "0.4"

# Compression
flate2 = "1.0"
base64 = "0.22"

# Concurrency testing - SECURITY UPDATED
crossbeam = { workspace = true }
crossbeam-queue = { workspace = true }  # Now inherits secure 0.3.11
crossbeam-utils = { workspace = true }  # Now inherits secure 0.8.19
parking_lot = { workspace = true }
num_cpus = { workspace = true }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Observability for tests
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter", "json"] }

# Test utilities
once_cell = "1.20"
static_assertions = "1.1"

# Performance testing utilities
criterion = { workspace = true }

# Fuzzing support
libfuzzer-sys = { version = "0.4", optional = true }

# Security testing utilities
cargo-fuzz = { workspace = true, optional = true }
afl = { workspace = true, optional = true }
honggfuzz = { workspace = true, optional = true }

# Network simulation and distributed testing - SECURITY UPDATED
socket2 = { workspace = true }  # Now inherits secure 0.5.7
pin-project-lite = "0.2"

# Monitoring and observability dependencies - SECURITY UPDATED
# CRITICAL FIX: Update prometheus to resolve protobuf RUSTSEC-2024-0437
prometheus = { version = "0.14", optional = true }  # Updated to avoid protobuf vulnerability
reqwest = { version = "0.11", features = ["json"], optional = true }

[dev-dependencies]
tokio-test = { workspace = true }
criterion = "0.5.1"
proptest = "1.2.0"
# SECURITY FIX: Updated tokio dev-dependency to secure version
tokio = { version = "1.35.1", features = ["full"] }  # Security fix: minimum secure version
async-stream = "0.3.5"

[features]
default = ["monitoring"]  # ENABLE MONITORING BY DEFAULT TO FIX REQWEST COMPILATION
fuzzing = ["dep:libfuzzer-sys"]
security-testing = ["dep:cargo-fuzz", "dep:afl", "dep:honggfuzz"]
monitoring = ["dep:prometheus", "dep:reqwest"]

# Infrastructure Test Modules
[[test]]
name = "test_core_framework"
path = "tests/infrastructure/test_core_framework.rs"

[[test]]
name = "test_property_based"
path = "tests/infrastructure/test_property_based.rs"

# E2E Integration Test Modules
[[test]]
name = "test_full_pipeline"
path = "tests/e2e/test_full_pipeline.rs"

[[test]]
name = "test_performance_targets"
path = "tests/e2e/test_performance_targets.rs"

# Performance Test Modules
[[test]]
name = "benchmark_throughput"
path = "tests/performance/benchmark_throughput.rs"

[[test]]
name = "memory_tracking"
path = "tests/performance/memory_tracking.rs"