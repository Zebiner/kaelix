[package]
name = "kaelix-core"
version = "0.1.0"
edition = "2021"
description = "Core types and utilities for the Kaelix streaming platform"
license = "MIT OR Apache-2.0"

[dependencies]
# Core dependencies
uuid = { workspace = true, features = ["v4", "serde"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
toml = { workspace = true }
thiserror = { workspace = true }
anyhow = { workspace = true }

# Async runtime
tokio = { workspace = true }
tokio-util = { workspace = true }
futures = { workspace = true }

# Concurrency primitives
crossbeam-channel = { workspace = true }
parking_lot = { workspace = true }
dashmap = { workspace = true }
num_cpus = { workspace = true }

# Networking
bytes = { workspace = true }

# Logging and tracing
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter", "json"] }
tracing-opentelemetry = { workspace = true }

# Time utilities
chrono = { workspace = true, features = ["serde", "std"] }

# Configuration and observability
config = { workspace = true }

# Compression
flate2 = { workspace = true }
lz4 = { workspace = true }

# Cryptographic utilities
blake3 = { workspace = true }
crc32fast = { workspace = true }

# Error handling
color-eyre = { workspace = true }

# File system operations
tempfile = { workspace = true }
walkdir = { workspace = true }
dirs = "5.0"

# Serialization formats  
bincode = { workspace = true }

# Async trait support
async-trait = { workspace = true }

# Process and system utilities
signal-hook = { workspace = true }
signal-hook-tokio = { workspace = true, features = ["futures-v0_3"] }

# Memory management
arc-swap = { workspace = true }

# Testing utilities
proptest = { workspace = true, optional = true }

# High-performance metrics
metrics = { workspace = true }
metrics-exporter-prometheus = { workspace = true }

# OpenTelemetry integration - compatible versions
opentelemetry = "0.22.0"
opentelemetry_sdk = "0.22.1"
opentelemetry-jaeger = "0.21.0"
notify = { workspace = true, optional = true }

# Plugin system support
libloading = { workspace = true }
validator = { version = "0.20.0", features = ["derive"] }
zeroize.workspace = true

[features]
experimental = []
default = ["runtime"]
runtime = []
testing = ["proptest"]
hot-reload = ["notify", "dep:notify"]
notify = ["dep:notify"]

[dev-dependencies]
tokio-test = { workspace = true }
criterion = { workspace = true, features = ["html_reports"] }
proptest = { workspace = true }
