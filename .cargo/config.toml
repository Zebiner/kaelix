# MemoryStreamer Cargo Configuration
# Optimized for ultra-high-performance streaming (10M+ msg/sec, <10Î¼s latency)

[build]
# Use all available CPU cores for compilation
incremental = true

# Cargo aliases for common development workflows
[alias]
# Quality checks
check-all = "check --all-targets --all-features"
fmt-check = "fmt --all -- --check"
clippy-all = "clippy --all-targets --all-features -- -D warnings"

# Testing workflows
test-all = "test --all-features --all-targets"
test-unit = "test --lib"
test-integration = "test --test '*'"
test-bench = "bench --all-features"

# Performance workflows
bench-throughput = "bench --bench throughput -- --nocapture"
bench-latency = "bench --bench latency -- --nocapture"
bench-all = "bench --all-features -- --nocapture"

# Development shortcuts
dev-check = ["fmt", "clippy", "test-unit"]

# Release workflows
release-build = "build --release --all-features"

# Documentation
docs = "doc --all-features --no-deps --open"

# Environment variables for build optimization
[env]
# Use jemalloc as the global allocator for better performance
MALLOC_CONF = "background_thread:true,metadata_thp:auto,dirty_decay_ms:30000,muzzy_decay_ms:30000"

# Performance monitoring
RUST_BACKTRACE = "1"
RUST_LOG = "info"

# Git dependencies optimization
[net]
retry = 3
git-fetch-with-cli = false  # Use libgit2 for faster git operations

# HTTP settings for dependency downloads
[http]
timeout = 60
multiplexing = true
low-speed-limit = 10
check-revoke = false  # Faster for development

# Configuration for specific tools
[term]
color = "always"
progress.when = "auto"
progress.width = 80